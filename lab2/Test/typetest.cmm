int m1, m2[10], m666[2][2][2][2];
int hello[123];
float m3[10], m4[100], m10[2][2];
struct gogo {
    int n1;
    float n2;
} m5, m6[10];

int function1() {
}

struct gogo func(float param1[5][6], int param2, struct gogo param3, struct gogo param4[2]) {
}

int func1(int arg1, float arg2[3], float arg3[2][2], int arg4[6][6][6][6]) {
}

int main() {
    struct A {
        int a, b, c;
        float p[10], q[5][2], r[4][5][6], s, t;
        struct {
            int aa, bb[3];
        } gg, ss[4];
        struct B {
            int haha;
            float mm[5];
        } papa;
    } test;
    int n3, n4;
    float n5, n6;
    int hello2[123];
    function1(n4);
    func();
    func1(n3, m4, m10, m1);
    func(m10, n3, m5, m6, n4);

    function1();
    func(m10, n3, m5, m6);
    func1(n3, m4, m10, m666);
    func1(1, m4, m10, m666);
    func1(666, m4, m10, m666);
    func1(1.25, m4, m10, m666);
    func1(function1(), m4, m10, m666);
    func(m10, n3, func(m10, n3, m5, m6), m6);

    m123 = 2;
    hello[1] = hello && hello2 && m1;
    1.1 && 2;
    2 || 1.1;
    hello+1;
    1-hello;
    hello*1;
    hello/1;
    !hello;

    m1[1] = 2;
    hello[1.1] = 2;
    hello[2] = 3;
    -----------hello;
    
    test.p[1] = 3;
    test.ppppp = 3;
    
    return 0;
}